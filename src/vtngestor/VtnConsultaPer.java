/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vtngestor;

import cjb.ci.CtrlInterfaz;
import cjb.ci.Mensaje;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.text.DecimalFormat;
import java.util.Arrays;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import proyectosp.Manipulacion;
import proyectosp.Personal;

/**
 *
 * @author Cassandra
 */
public class VtnConsultaPer extends javax.swing.JFrame
{

    DefaultTableModel dtm;

    /**
     * Creates new form VtnConsultaAlu
     */
    public VtnConsultaPer()
    {
        initComponents();
        String com[] =
        {
            "Clave", "Nombre", "Primer Apellido", "Segundo Apellido", "Sexo", "Desnutricion", "Sobrepeso", "Alergias","Obecidad", "Diabetes", "Otros", "Estatus"
        };
        dtm = new DefaultTableModel(com, 0);
        desp.setModel(dtm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        desp = new javax.swing.JTable();
        elimina = new javax.swing.JButton();
        ordena = new javax.swing.JButton();
        stats = new javax.swing.JButton();
        enfermedades = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta de Personal");
        setPreferredSize(new java.awt.Dimension(1180, 610));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowOpened(java.awt.event.WindowEvent evt)
            {
                formWindowOpened(evt);
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        desp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11", "Title 12"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        desp.setEnabled(false);
        jScrollPane2.setViewportView(desp);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 1190, 480));

        elimina.setBackground(new java.awt.Color(255, 0, 0));
        elimina.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        elimina.setText("Elimina");
        elimina.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                eliminaActionPerformed(evt);
            }
        });
        jPanel1.add(elimina, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 130, 30));

        ordena.setBackground(new java.awt.Color(153, 153, 255));
        ordena.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ordena.setText("Ordena");
        ordena.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ordenaActionPerformed(evt);
            }
        });
        jPanel1.add(ordena, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 130, 30));

        stats.setBackground(new java.awt.Color(51, 255, 153));
        stats.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        stats.setText("Estadisticas H/M");
        stats.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                statsActionPerformed(evt);
            }
        });
        jPanel1.add(stats, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 10, 150, 40));

        enfermedades.setBackground(new java.awt.Color(51, 255, 153));
        enfermedades.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        enfermedades.setText("Estadisticas Enfermedades");
        enfermedades.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                enfermedadesActionPerformed(evt);
            }
        });
        jPanel1.add(enfermedades, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 70, 150, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vtngestor/imagenes/cve222.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 1460, 600));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1182, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowOpened
    {//GEN-HEADEREND:event_formWindowOpened
        DefaultTableModel model = (DefaultTableModel) desp.getModel();
        model.setColumnIdentifiers(new Object[]
        {
            "Clave", "Nombre", "Primer Apellido", "Segundo Apellido", "Sexo", "Desnutricion", "Sobrepeso", "Alergias", "Obecidad", "Diabetes", "Otros", "Estatus"
        });

        JTableHeader header = desp.getTableHeader();
        header.setReorderingAllowed(false);

        JTableHeader header1 = desp.getTableHeader();
        header.setResizingAllowed(false);
        try
        {
            mostrar();
        } catch (Exception e)
        {
            Mensaje.error(this, "No hay datos que mostrar");
        }
    }//GEN-LAST:event_formWindowOpened

    private void eliminaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_eliminaActionPerformed
    {//GEN-HEADEREND:event_eliminaActionPerformed
        String cveElimina = JOptionPane.showInputDialog("Ingrese la clave del Personal:");
        try
        {
            if (Manipulacion.buscarcve(VtnInicio.d, cveElimina) != -1 && VtnInicio.d[Manipulacion.buscarcve(VtnInicio.d, cveElimina)] instanceof Personal)
            {
                VtnInicio.d = Manipulacion.elimina(VtnInicio.d, Manipulacion.buscarcve(VtnInicio.d, cveElimina));
                Mensaje.exito(this, "Personal dado de baja correctamente");
                actualizarTabla();
            } else
            {
                if (cveElimina == null)
                {
                    Mensaje.error(this, "Ingrese CVE");
                    CtrlInterfaz.limpia(cveElimina);
                    CtrlInterfaz.cambia(cveElimina);
                } else
                {
                    Mensaje.error(this, "Ingrese un CVE valido");
                    CtrlInterfaz.limpia(cveElimina);
                    CtrlInterfaz.cambia(cveElimina);
                }
            }
        } catch (Exception e)
        {
            Mensaje.error(this, "No se a encontrado el CVE ingresado");
        }
    }//GEN-LAST:event_eliminaActionPerformed

    private void ordenaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ordenaActionPerformed
    {//GEN-HEADEREND:event_ordenaActionPerformed
        Personal[] arregloPersonal = obtenerArregloPersonal();

        Arrays.sort(arregloPersonal, (a1, a2) -> a1.getNom().compareTo(a2.getNom()));

        dtm.setRowCount(0);
        for (Personal personal : arregloPersonal)
        {
            Object[] rowData = obtenerDatosPersonal(personal);
            dtm.addRow(rowData);
        }
    }//GEN-LAST:event_ordenaActionPerformed

    private void statsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_statsActionPerformed
    {//GEN-HEADEREND:event_statsActionPerformed
        mostrarGraficoPastel();
    }//GEN-LAST:event_statsActionPerformed

    private void enfermedadesActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_enfermedadesActionPerformed
    {//GEN-HEADEREND:event_enfermedadesActionPerformed
        int volumen = 600;
        mostrarGraficoBarrasEnfermedades(volumen);
    }//GEN-LAST:event_enfermedadesActionPerformed
    private void mostrarGraficoBarrasEnfermedades(int anchoGrafica)
    {
        CategoryDataset dataset = createEnfermedadesDataset();

        JFreeChart chart = ChartFactory.createBarChart(
                "Gráfica de Barras - Enfermedades",
                "Enfermedades",
                "Cantidad de Alumnos",
                dataset,
                PlotOrientation.VERTICAL,
                true,
                true,
                false
        );

        CategoryPlot plot = chart.getCategoryPlot();
        NumberAxis yAxis = (NumberAxis) plot.getRangeAxis();
        yAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(new Dimension(anchoGrafica, 400));

        JFrame frame = new JFrame("Gráfica de Barras - Enfermedades");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.getContentPane().add(chartPanel, BorderLayout.CENTER);
        frame.pack();
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }

    private CategoryDataset createEnfermedadesDataset()
    {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        int cantidadDesnutricion = Manipulacion.PerDesnutricion(VtnInicio.d);
        int cantidadSobrepeso = Manipulacion.PerSobrepeso(VtnInicio.d);
        int cantidadAlergias = Manipulacion.PerAlergias(VtnInicio.d);
        int cantidadObesidad = Manipulacion.PerObecidad(VtnInicio.d);
        int cantidadDiabetes = Manipulacion.PerDiabetes(VtnInicio.d);

        dataset.addValue(cantidadDesnutricion, "Enfermedades", "Desnutricion");
        dataset.addValue(cantidadSobrepeso, "Enfermedades", "Sobrepeso");
        dataset.addValue(cantidadAlergias, "Enfermedades", "Alergias");
        dataset.addValue(cantidadObesidad, "Enfermedades", "Obesidad");
        dataset.addValue(cantidadDiabetes, "Enfermedades", "Diabetes");

        return dataset;
    }
    
    
    
    private void mostrarGraficoPastel()
    {
        DefaultPieDataset dataset = new DefaultPieDataset();

        double porcentajeHombres = Manipulacion.calcularPorcentajeHombresPersonal(VtnInicio.d);
        double porcentajeMujeres = Manipulacion.calcularPorcentajeMujeresPersonal(VtnInicio.d);

        String labelHombres = "Hombres "; //+ formatearDecimal(porcentajeHombres, 1);
        String labelMujeres = "Mujeres "; //+ formatearDecimal(porcentajeMujeres, 1);

        dataset.setValue(labelHombres, porcentajeHombres);
        dataset.setValue(labelMujeres, porcentajeMujeres);

        JFreeChart chart = ChartFactory.createPieChart(
                "Porcentaje de Hombres y Mujeres",
                dataset,
                true,
                true,
                false);

        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(new java.awt.Dimension(560, 370));

        JFrame frame = new JFrame("Gráfico de Pastel");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.getContentPane().add(chartPanel);
        frame.pack();
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }

    public static String formatearDecimal(double valor, int cantidadDecimales)
    {
        String formato = "#.";
        for (int i = 0; i < cantidadDecimales; i++)
        {
            formato += "#";
        }
        DecimalFormat df = new DecimalFormat(formato);
        return df.format(valor);
    }
    private Personal[] obtenerArregloPersonal()
    {
        return Arrays.stream(VtnInicio.d)
                .filter(personal -> personal instanceof Personal)
                .map(personal -> (Personal) personal)
                .toArray(Personal[]::new);
    }
    
    public void actualizarTabla()
    {
        dtm.setRowCount(0);
        mostrar();
    }
    
    public void mostrar()
    {
        for (int i = 0; i < VtnInicio.d.length; i++)
        {
            if (VtnInicio.d[i] instanceof Personal)
            {
                Personal personal = (Personal) VtnInicio.d[i];
                Object[] rowData = obtenerDatosPersonal(personal);
                dtm.addRow(rowData);
            }
        }
    }

    private Object[] obtenerDatosPersonal(Personal personal)
    {
        return new Object[]
        {
            personal.getCve(),
            personal.getNom(),
            personal.getPrimerAp(),
            personal.getSegundoAp(),
            personal.getSexo(),
            convertirBooleanoASiNo(personal.isDesnutricion()),
            convertirBooleanoASiNo(personal.isSobrepeso()),
            convertirBooleanoASiNo(personal.isAlergias()),
            convertirBooleanoASiNo(personal.isObecidad()),
            convertirBooleanoASiNo(personal.isDiabetes()),
            personal.getOtras(),
            obtenerEstatus(personal.getEstatus()),
        };
    }

    private String obtenerEstatus(int opcion)
    {
        String s = "";

        switch (opcion)
        {
            case 'B':
                return "Base";
            case 'T':
                return "Temporal";
        }
        return s;
    }

    private String convertirBooleanoASiNo(boolean valor)
    {
        return valor ? "Si" : "No";
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(VtnConsultaPer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(VtnConsultaPer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(VtnConsultaPer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(VtnConsultaPer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new VtnConsultaPer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable desp;
    private javax.swing.JButton elimina;
    private javax.swing.JButton enfermedades;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton ordena;
    private javax.swing.JButton stats;
    // End of variables declaration//GEN-END:variables
}
