/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vtngestor;

import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import proyectosp.Alumnos;
import proyectosp.Datos;

/**
 *
 * @author chemo
 */
public class VtnReportesA extends javax.swing.JFrame
{

    DefaultTableModel dtm;

    /**
     * Creates new form VtnReportesA
     */
    public VtnReportesA()
    {
        initComponents();
        String com[] =
        {
            "Clave", "Nombre", "Primer Apellido", "Segundo Apellido", "Sexo", "Desnutricion", "Sobrepeso", "Alergias","Obecidad", "Diabetes", "Otros", "Vive Con", "Carrera"
        };
        dtm = new DefaultTableModel(com, 0);
        desp.setModel(dtm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        desp = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        checkDiabetes = new javax.swing.JCheckBox();
        checkHombres = new javax.swing.JCheckBox();
        checkMujeres = new javax.swing.JCheckBox();
        checkAlergias = new javax.swing.JCheckBox();
        checkSobrepeso = new javax.swing.JCheckBox();
        checkDesnutricion = new javax.swing.JCheckBox();
        checkObesidad = new javax.swing.JCheckBox();
        checkOtros = new javax.swing.JCheckBox();
        botonAceptar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Reportes de informacion.");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowOpened(java.awt.event.WindowEvent evt)
            {
                formWindowOpened(evt);
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        desp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11", "Title 12"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        desp.setEnabled(false);
        desp.setRowSelectionAllowed(false);
        desp.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                despMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(desp);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 1170, 430));

        jLabel2.setText("Filtro:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        checkDiabetes.setText("Diabetes");
        checkDiabetes.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                checkDiabetesActionPerformed(evt);
            }
        });
        jPanel1.add(checkDiabetes, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 140, -1, -1));

        checkHombres.setText("Hombres");
        jPanel1.add(checkHombres, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, -1, -1));

        checkMujeres.setText("Mujeres");
        jPanel1.add(checkMujeres, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, -1, -1));

        checkAlergias.setText("Alergias");
        jPanel1.add(checkAlergias, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 140, -1, -1));

        checkSobrepeso.setText("Sobrepeso");
        jPanel1.add(checkSobrepeso, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 140, -1, -1));

        checkDesnutricion.setText("Desnutricion");
        checkDesnutricion.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                checkDesnutricionActionPerformed(evt);
            }
        });
        jPanel1.add(checkDesnutricion, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 140, -1, -1));

        checkObesidad.setText("Obesidad");
        jPanel1.add(checkObesidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 140, -1, -1));

        checkOtros.setText("Otros");
        jPanel1.add(checkOtros, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 140, -1, -1));

        botonAceptar.setBackground(new java.awt.Color(36, 229, 36));
        botonAceptar.setText("Aceptar");
        botonAceptar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                botonAceptarActionPerformed(evt);
            }
        });
        jPanel1.add(botonAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 130, -1, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vtngestor/imagenes/cve222.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -40, 1180, 600));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowOpened
    {//GEN-HEADEREND:event_formWindowOpened
        DefaultTableModel model = (DefaultTableModel) desp.getModel();
        model.setColumnIdentifiers(new Object[]{"Clave", "Nombre", "Primer Apellido", "Segundo Apellido", "Sexo", "Desnutricion", "Sobrepeso", "Alergias","Obecidad", "Diabetes", "Otros", "Vive Con", "Carrera"});
        
        JTableHeader header = desp.getTableHeader();
        header.setReorderingAllowed(false);
        
        JTableHeader header1 = desp.getTableHeader();
        header.setResizingAllowed(false);
    }//GEN-LAST:event_formWindowOpened
    public void filtro1()
    {
        for (int i = 0; i < VtnInicio.d.length; i++)
        {
            if (checkDiabetes.isSelected() == true && VtnInicio.d[i].isDiabetes() == true || checkDiabetes.isSelected() == false && checkDiabetes.isSelected() == true
                    && checkMujeres.isSelected() == true && VtnInicio.d[i].getSexo() == 'F' || checkMujeres.isSelected() == false && checkMujeres.isSelected() == true
                    && checkHombres.isSelected() == true && VtnInicio.d[i].getSexo() == 'M' || checkHombres.isSelected() == false && checkHombres.isSelected() == true
                    && checkAlergias.isSelected() == true && VtnInicio.d[i].isAlergias() == true || checkAlergias.isSelected() == false && checkAlergias.isSelected() == true
                    && checkSobrepeso.isSelected() == true && VtnInicio.d[i].isSobrepeso() == true || checkSobrepeso.isSelected() == false && checkSobrepeso.isSelected() == true
                    && checkDesnutricion.isSelected() == true && VtnInicio.d[i].isDesnutricion() == true || checkDesnutricion.isSelected() == false && checkDesnutricion.isSelected() == true
                    && checkObesidad.isSelected() == true && VtnInicio.d[i].isObecidad() == true || checkObesidad.isSelected() == false && checkObesidad.isSelected() == true
                    && checkOtros.isSelected() == true && VtnInicio.d[i].getOtras() != null || checkOtros.isSelected() == false && checkOtros.isSelected() == true)
            {
                if (VtnInicio.d[i] instanceof Alumnos)
                {
                    //Alumnos alumno = (Alumnos) VtnInicio.d[i];
                    Object[] rowData =
                    {
                        VtnInicio.d[i].getCve(),
                        VtnInicio.d[i].getNom(),
                        VtnInicio.d[i].getPrimerAp(),
                        VtnInicio.d[i].getSegundoAp(),
                        VtnInicio.d[i].getSexo(),
                        VtnInicio.d[i].isDesnutricion() ? "Si" : "No",
                        VtnInicio.d[i].isSobrepeso() ? "Si" : "No",
                        VtnInicio.d[i].isAlergias() ? "Si" : "No",
                        VtnInicio.d[i].isObecidad() ? "Si" : "No",
                        VtnInicio.d[i].isDiabetes() ? "Si" : "No",
                        VtnInicio.d[i].getOtras(),
                        (((Alumnos) VtnInicio.d[i]).getViveCon() == 1) ? "Mama y Papa"
                        : (((Alumnos) VtnInicio.d[i]).getViveCon() == 2) ? "Solo mama"
                        : (((Alumnos) VtnInicio.d[i]).getViveCon() == 3) ? "Solo Papa" : "Otros",
                        (((Alumnos) VtnInicio.d[i]).getCarrera() == 1) ? "Ingienieria en Software"
                        : (((Alumnos) VtnInicio.d[i]).getCarrera() == 2) ? "Ingienieria en Plasticos"
                        : (((Alumnos) VtnInicio.d[i]).getCarrera() == 3) ? "Ingienieria en Produccion Industrial"
                        : (((Alumnos) VtnInicio.d[i]).getViveCon() == 4) ? "Ingienieria en Mecanica"
                        : (((Alumnos) VtnInicio.d[i]).getViveCon() == 5) ? "Ingienieria en Computacion"
                        : (((Alumnos) VtnInicio.d[i]).getViveCon() == 6) ? "Licenciatura en Seguridad Ciudadana" : "",
                    };
                    dtm.addRow(rowData);
                }
            }
        }
    }
    private void checkDiabetesActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_checkDiabetesActionPerformed
    {//GEN-HEADEREND:event_checkDiabetesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkDiabetesActionPerformed

    private void checkDesnutricionActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_checkDesnutricionActionPerformed
    {//GEN-HEADEREND:event_checkDesnutricionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkDesnutricionActionPerformed

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botonAceptarActionPerformed
    {//GEN-HEADEREND:event_botonAceptarActionPerformed
        //filtro();
        limpiarTabla();
        filtro();
    }//GEN-LAST:event_botonAceptarActionPerformed

    private void despMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_despMouseClicked
    {//GEN-HEADEREND:event_despMouseClicked
        
    }//GEN-LAST:event_despMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(VtnReportesA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(VtnReportesA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(VtnReportesA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(VtnReportesA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new VtnReportesA().setVisible(true);
            }
        });
    }

    public void filtro()
    {
        for (int i = 0; i < VtnInicio.d.length; i++)
        {
            if (cumpleCondiciones(VtnInicio.d[i]))
            {
                if (VtnInicio.d[i] instanceof Alumnos)
                {
                    Alumnos alumno = (Alumnos) VtnInicio.d[i];
                    Object[] rowData = obtenerDatosAlumno(alumno);
                    dtm.addRow(rowData);
                }
            }
        }
    }

    private boolean cumpleCondiciones(Datos dato)
    {
        return (cumpleCondicion(checkDiabetes.isSelected(), dato.isDiabetes())
                && cumpleCondicion(checkMujeres.isSelected(), dato.getSexo() == 'F')
                && cumpleCondicion(checkHombres.isSelected(), dato.getSexo() == 'M')
                && cumpleCondicion(checkAlergias.isSelected(), dato.isAlergias())
                && cumpleCondicion(checkSobrepeso.isSelected(), dato.isSobrepeso())
                && cumpleCondicion(checkDesnutricion.isSelected(), dato.isDesnutricion())
                && cumpleCondicion(checkObesidad.isSelected(), dato.isObecidad())
                && cumpleCondicion(checkOtros.isSelected(), dato.getOtras() != null));
    }

    private boolean cumpleCondicion(boolean checkboxSeleccionado, boolean condicionDato)
    {
        return checkboxSeleccionado == condicionDato || !checkboxSeleccionado;
    }

    private Object[] obtenerDatosAlumno(Alumnos alumno)
    {
        return new Object[]
        {
            alumno.getCve(),
            alumno.getNom(),
            alumno.getPrimerAp(),
            alumno.getSegundoAp(),
            alumno.getSexo(),
            convertirBooleanoASiNo(alumno.isDesnutricion()),
            convertirBooleanoASiNo(alumno.isSobrepeso()),
            convertirBooleanoASiNo(alumno.isAlergias()),
            convertirBooleanoASiNo(alumno.isObecidad()),
            convertirBooleanoASiNo(alumno.isDiabetes()),
            alumno.getOtras(),
            obtenerViveCon(alumno.getViveCon()),
            obtenerCarrera(alumno.getCarrera())
        };
    }

    private String convertirBooleanoASiNo(boolean valor)
    {
        return valor ? "Si" : "No";
    }

    private String obtenerViveCon(int opcion)
    {
        String s= "";
        switch (opcion)
        {
            case 0:
                return "Ambos padres";
            case 1:
                return "Solo papa";
            case 2:
                return "Solo mama";
            case 3:
                return "Otros";
        }
        return s;    
    }

    
    private String obtenerCarrera(int opcion)
    {
        String s = "";
        switch (opcion)
        {
            case 0:
                return "Ing Software";
            case 1:
                return "Ing Plasticos";
            case 2:
                return "Ing Produccion Industrial";
            case 3:
                return "Ing Mecanica";
            case 4:
                return "Ing Computacion";
            case 5:
                return "Lic Seguridad Ciudadana";
        }
        return s;
    }
//    private String obtenerCarrera(int opcion)
//    {
//        String[] carreras =
//        {
//            "Ingenieria en Software", "Ingenieria en Plasticos",
//            "Ingenieria en Produccion Industrial", "Ingenieria mecanica",
//            "Ingenieria en Computacion", "Licenciatura en Seguridad Ciudadana"
//        };
//
//        return (opcion >= 1 && opcion <= carreras.length) ? carreras[opcion - 1] : "Desconocida";
//    }

    private void limpiarTabla()
    {
        DefaultTableModel dtm = (DefaultTableModel) desp.getModel();
        dtm.setRowCount(0); 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptar;
    private javax.swing.JCheckBox checkAlergias;
    private javax.swing.JCheckBox checkDesnutricion;
    private javax.swing.JCheckBox checkDiabetes;
    private javax.swing.JCheckBox checkHombres;
    private javax.swing.JCheckBox checkMujeres;
    private javax.swing.JCheckBox checkObesidad;
    private javax.swing.JCheckBox checkOtros;
    private javax.swing.JCheckBox checkSobrepeso;
    private javax.swing.JTable desp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
